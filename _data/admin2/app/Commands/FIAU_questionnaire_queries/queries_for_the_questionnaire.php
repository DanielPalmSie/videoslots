<?php


// 14.10 - What percentage of customers was CDD not conducted (as a % of total)?
    // the total number of players which exceeded €2k in deposits but have not send in their proof of identity or have not been verified.

    // check users_daily_stats, sum deposits for each user for 2018
    $query = "SELECT user_id
            FROM (
                SELECT
                    user_id,
                    SUM(deposits) AS total_deposits

                FROM users_daily_stats uds
                WHERE YEAR(uds.date) = 2018

                GROUP BY user_id
                HAVING total_deposits > 200000
            )";
    // returns 17923 players

    // now use those 17923 user_id's when querying the dmapi:
    $query = "SELECT
                    COUNT(DISTINCT user_id) AS number_of_players
               FROM documents
               WHERE deleted_at IS NULL
               AND tag = 'idcard-pic'
               AND user_id IN ({$user_ids})
               AND (status != 2 AND status != 1)
              ";
    // returns 3256 players

// 14.13 - What percentage of customers was EDD not conducted (as a % of total)?
    // the total number of customers where SOWd or SOWp was requested where this was not provided or approved
    $query = "SELECT
                    COUNT(DISTINCT user_id) AS number_of_players
               FROM documents
               WHERE deleted_at IS NULL
               AND tag IN ('sourceoffundspic', 'proofofwealthpic')
               AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
               AND (status != 2 AND status != 1)
              ";
    // returns 189 players


/**
 * 7.4
 * How many alerts were generated by the AML/CFT unit's automated monitoring system that have resulted in investigations in 2018?
 * Note: The number of accounts with at least one ‘AML Risk Score’ note time stamped in 2018
 */
$do_7_4 = function () {
    $result = "
        SELECT count(*) AS c FROM (
            SELECT count(*) AS c FROM users_comments 
            WHERE tag = 'aml-risk-group' 
              AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59' 
            GROUP BY user_id
        ) AS res WHERE res.c > 0
    ";
    $result = DB::shsSelect('users_comments', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 7.15
 * How many customer relationships were closed for AML/CFT reasons during 2018?
 *
 * Note: The number of accounts with at least one ‘SAR’ or ‘MLRO’ note time stamped in 2018,
 * and blocked or superblocked in 2018, and without self-excluded block status.
 */
$do_7_15 = function () {
    $result = "
        SELECT count(DISTINCT uc.user_id) AS c FROM actions
        LEFT JOIN (
            SELECT DISTINCT target FROM actions 
            WHERE target = actor 
              AND lower(descr) LIKE '%self%excluded%' 
              AND tag = 'profile-lock'
              AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS self_excluded ON actions.target = self_excluded.target
        LEFT JOIN (
            SELECT DISTINCT user_id FROM users_comments 
            WHERE tag in ('mlor', 'sar')
            AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS uc ON uc.user_id = actions.target
        WHERE self_excluded.target IS NULL 
          AND uc.user_id IS NOT NULL 
          AND actions.tag IN ('super-blocked', 'block')
          AND actions.created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('actions', $result);
    $result = array_sum(array_pluck($result,'c'));
    return $result;
};

/**
 * 7.16
 * How many customers did the institution refuse to onboard or provide services to/assist in transactions for AML/CFT reasons during 2018?
 *
 * Note: The number of blocked or superblocked accounts where the PEP/SL check is not a pass
 */
$do_7_16 = function () {
    $result = "
        SELECT count(DISTINCT uc.user_id) AS c FROM actions
        LEFT JOIN triggers_log AS tl 
            ON tl.user_id = actions.target 
               AND trigger_name = 'AML2' 
               AND tl.created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        WHERE actions.tag IN ('super-blocked', 'block') 
          AND tl.user_id IS NOT NULL
          AND actions.created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('actions', $result);
    $result = array_sum(array_pluck($result,'c'));
    return $result;
};

/**
 * 7.17
 * What is the total number of customer accounts blocked or suspended/terminated in view of AML/CFT during 2018?
 *
 * Note: The number of accounts with at least one ‘AML Risk Score’, ‘SAR’ or ‘MLRO’ note time stamped in 2018,
 * and blocked or superblocked in 2018, and without self-excluded block status
 */
$do_7_17 = function () {
    $result = "
        SELECT count(DISTINCT uc.user_id) AS c FROM actions
        LEFT JOIN (
            SELECT DISTINCT target FROM actions 
            WHERE target = actor 
              AND lower(descr) LIKE '%self%excluded%' 
              AND tag = 'profile-lock'
              AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS self_excluded ON actions.target = self_excluded.target
        LEFT JOIN (
          SELECT distinct user_id FROM users_comments 
          WHERE tag IN ('mlor', 'sar', 'aml-risk-group')
          AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS uc ON uc.user_id = actions.target
        WHERE self_excluded.target IS NULL 
          AND uc.user_id IS NOT NULL 
          AND actions.tag IN ('super-blocked', 'block')
          AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('actions', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};


/**
 * 7.18
 * What is the total number of customer accounts blocked or suspended/terminated in view of Fraud during 2018?
 *
 * Note: The number of accounts without any ‘SAR’ or ‘MLRO’ note time stamped in 2018,
 * and blocked or superblocked in 2018, and without self-excluded block status
 */
$do_7_18 = function () {
    $result = "
        SELECT count(DISTINCT uc.user_id) AS c FROM actions
        LEFT JOIN (
          SELECT distinct target FROM actions 
          WHERE target = actor 
            AND lower(descr) LIKE '%self%excluded%' 
            AND tag = 'profile-lock'
            AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS self_excluded ON actions.target = self_excluded.target
        LEFT JOIN (
          SELECT distinct user_id FROM users_comments 
          WHERE tag NOT IN ('mlor', 'sar')
          AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS uc ON uc.user_id = actions.target
        WHERE self_excluded.target IS NULL 
          AND uc.user_id IS NOT NULL 
          AND actions.tag IN ('super-blocked', 'block')
          AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('actions', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 11.21
 * Of the total number of transactions, what percentage were single deposits
 * of €2,000 or more for providers of gambling services in the past 2018?
 */
$do_11_21 = function () {
    $threshold = 2000;
    $total = "
        SELECT count(*) AS c FROM deposits 
        WHERE timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits 
        WHERE ROUND(amount / 100, 2) >= {$threshold} 
          AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.22
 * Of the total number of customers, what percentage of customers submitted single deposits
 * of €2,000 or more for providers of gambling services in 2018?
 */
$do_11_22 = function () {
    $threshold = 2000;
    $total = "
        SELECT count(*) AS c FROM users 
        WHERE register_date <= date('2018-12-18 23:59:59')
    ";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM (
            select user_id FROM deposits 
            WHERE ROUND(amount / 100, 2) >= {$threshold} 
              AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59' 
            GROUP BY user_id
        ) AS result
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};


/**
 * 11.23
 * Of the total number of transactions, what percentage were transactions that met the €2,000 threshold within 180 days (cumulative)?
 */
$do_11_23 = function () {
    $threshold = 2000;
    $result = DB::getMasterConnection()->select("select id from users");

    $result_nodes = [];
    foreach ($result as $res) {
        $res = (array)$res;
        $item = $res['id'];

        if (empty($result_nodes[$item%10])) {
            $result_nodes[$item%10] = [];
        }
        $result_nodes[$item%10][] = $item;
    }

    $total = 0;
    $total_transactions = 0;
    $users_found = [];
    foreach ($result_nodes as $node => $result) {
        foreach (array_chunk($result,1000) as $users) {
            $user_ids = "('". implode("','", $users) ."')";

            $deposits = "
                SELECT user_id, ROUND(amount / 100, 2) AS amount, timestamp FROM deposits 
                WHERE user_id IN $user_ids
                AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
            ";
            $deposits = DB::shSelect($node,'deposits', $deposits);
            $total += count($deposits);

            foreach ($users as $user) {
                $user_deposits = array_filter($deposits, function ($deposit) use ($user) {
                    $deposit = (array)$deposit;
                    return $deposit['user_id'] === $user;
                });

                $end = new Carbon('2018-12-31 23:59:59');
                $interval_start = new Carbon('2018-01-01 00:00:00');
                $interval_end = $interval_start->copy()->addDays(180)->endOfDay();

                while ($interval_end <= $end) {
                    $sum = 0;
                    $no_transactions = 0;

                    $list_length = count($user_deposits);
                    for ($i = 0; $i < $list_length; $i++) {
                        $deposit = (array)$user_deposits[$i];
                        $deposit_time = new Carbon($deposit['timestamp']);
                        if ($interval_start <= $deposit_time && $deposit_time <= $interval_end) {
                            $sum += (float)$deposit['amount'];
                            $no_transactions += 1;
                        }
                        if ($sum >= $threshold || !in_array($user, $users_found)) {
                            $i = $list_length+1;
                            $interval_end = $end->addDay();
                            $users_found[] = $user;
                            $total_transactions += $no_transactions;
                        }
                    }

                    $interval_start->addDays(1);
                    $interval_end = $interval_start->copy()->addDays(180)->endOfDay();
                }
            }
        }
    }

    return $total_transactions * 100 / $total;
};



/**
 * 11.24
 * Of the total number of customers, what percentage of customers met the €2,000 threshold within 180 days (cumulative)?
 */
$do_11_24 = function () {
    $total = 0;
    $threshold = 2000;
    $result = DB::getMasterConnection()->select("select id from users");

    $result_nodes = [];
    foreach ($result as $res) {
        $res = (array)$res;
        $item = $res['id'];

        if (empty($result_nodes[$item%10])) {
            $result_nodes[$item%10] = [];
        }
        $result_nodes[$item%10][] = $item;
        $total += 1;
    }

    $users_found = [];
    foreach ($result_nodes as $node => $result) {
        foreach (array_chunk($result,1000) as $users) {
            $user_ids = "('". implode("','", $users) ."')";

            $deposits = "
                SELECT user_id, ROUND(amount / 100, 2) AS amount, timestamp FROM deposits 
                WHERE user_id IN $user_ids
                AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
            ";
            $deposits = DB::shSelect($node,'deposits', $deposits);

            foreach ($users as $user) {
                $user_deposits = array_filter($deposits, function ($deposit) use ($user) {
                    $deposit = (array)$deposit;
                    return $deposit['user_id'] === $user;
                });

                $end = new Carbon('2018-12-31 23:59:59');
                $interval_start = new Carbon('2018-01-01 00:00:00');
                $interval_end = $interval_start->copy()->addDays(180)->endOfDay();

                while ($interval_end <= $end) {
                    $sum = 0;

                    $list_length = count($user_deposits);
                    for ($i = 0; $i < $list_length; $i++) {
                        $deposit = (array)$user_deposits[$i];
                        $deposit_time = new Carbon($deposit['timestamp']);
                        if ($interval_start <= $deposit_time && $deposit_time <= $interval_end) {
                            $sum += (float)$deposit['amount'];
                        }
                        if ($sum >= $threshold || !in_array($user, $users_found)) {
                            $i = $list_length+1;
                            $interval_end = $end->addDay();
                            $users_found[] = $user;
                        }
                    }

                    $interval_start->addDays(1);
                    $interval_end = $interval_start->copy()->addDays(180)->endOfDay();
                }
            }
        }
    }

    $result = count($users_found);

    return $result * 100 / $total;
};


/**
 * 11.31
 * What is the percentage of the total volume and value activity that was cross-jurisdictional activity
 * with EU or EEA jurisdictions (for instance, via foreign holding accounts)
 *
 * Total Percentage of Player Deposits (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_31 = function () {
    $map = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select count(*) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.32
 * What is the percentage of the total volume and value activity that was cross-jurisdictional activity
 * with EU or EEA jurisdictions (for instance, via foreign holding accounts)
 *
 * Total Percentage of Winnings for Operator (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_32 = function () {
    $map = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select sum(ROUND(amount / 100, 2)) as c from wins";
    $total = DB::shsSelect('wins', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT sum(ROUND(amount / 100, 2)) AS c FROM wins
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('wins', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.33
 * What is the percentage of the total volume and value activity that was cross-jurisdictional activity
 * with EU or EEA jurisdictions (for instance, via foreign holding accounts)
 *
 * Total Percentage of Deposits (% of Total Volume)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_33 = function () {
    $map = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select count(*) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.34
 * Of the total cross border activity conducted, what is the volume and value
 * of cross-jurisdictional activity with high risk jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Player Deposits (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries], as a percentage of total deposits by all customers
 */
$do_11_34 = function () {
    $map = ['AF', 'AS', 'BS', 'BW', 'KP', 'ET', 'GH', 'GU', 'IR', 'IQ', 'LY', 'NG', 'PK', 'PA', 'PR', 'WS', 'SA', 'LK', 'SY', 'TT', 'TN', 'VI', 'YE'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select sum(ROUND(amount / 100, 2)) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT sum(ROUND(amount / 100, 2)) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.35
 * Of the total cross border activity conducted, what is the volume and value
 * of cross-jurisdictional activity with high risk jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Winnings for Operator (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries], as a percentage of total deposits by all customers
 */
$do_11_35 = function () {
    $map = ['AF', 'AS', 'BS', 'BW', 'KP', 'ET', 'GH', 'GU', 'IR', 'IQ', 'LY', 'NG', 'PK', 'PA', 'PR', 'WS', 'SA', 'LK', 'SY', 'TT', 'TN', 'VI', 'YE'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select sum(ROUND(amount / 100, 2)) as c from wins";
    $total = DB::shsSelect('wins', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT sum(ROUND(amount / 100, 2)) AS c FROM wins
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('wins', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.36
 * Of the total cross border activity conducted, what is the volume and value
 * of cross-jurisdictional activity with high risk jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Player Deposits (i.e., % of Total Volume)
 *
 * Note: EW: Deposits by customers in [countries], as a percentage of total deposits by all customers
 */
$do_11_36 = function () {
    $map = ['AF', 'AS', 'BS', 'BW', 'KP', 'ET', 'GH', 'GU', 'IR', 'IQ', 'LY', 'NG', 'PK', 'PA', 'PR', 'WS', 'SA', 'LK', 'SY', 'TT', 'TN', 'VI', 'YE'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select count(*) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};



/**
 * 11.37
 * Of the total cross border activity conducted, what is the percentage of the volume and value
 * of cross-jurisdictional activity with sanctioned jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Player Deposits (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_37 = function () {
    $map = ['AF', 'BY', 'BA', 'MM', 'BI', 'CF', 'CD', 'EG', 'ER', 'GN', 'GW', 'HT', 'IR', 'IQ', 'KP', 'LB', 'LY', 'ML', 'SO', 'SS', 'SD', 'SY', 'TN', 'UA', 'VE', 'YE', 'ZW'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select count(*) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 11.38
 * Of the total cross border activity conducted, what is the percentage of the volume and value
 * of cross-jurisdictional activity with sanctioned jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Winnings for Operator (i.e., % of Total Value)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_38 = function () {
    $map = ['AF', 'BY', 'BA', 'MM', 'BI', 'CF', 'CD', 'EG', 'ER', 'GN', 'GW', 'HT', 'IR', 'IQ', 'KP', 'LB', 'LY', 'ML', 'SO', 'SS', 'SD', 'SY', 'TN', 'UA', 'VE', 'YE', 'ZW'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select sum(ROUND(amount / 100, 2)) as c from wins";
    $total = DB::shsSelect('wins', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT sum(ROUND(amount / 100, 2)) AS c FROM wins
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND created_at BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('wins', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};



/**
 * 11.39
 * Of the total cross border activity conducted, what is the percentage of the volume and value
 * of cross-jurisdictional activity with sanctioned jurisdictions,
 * as defined by the institution's policies and procedures (for instance, via foreign holding accounts)
 *
 * Total Percentage of Deposits (% of Total Volume)
 *
 * Note: EW: Deposits by customers in [countries] as a percentage of total deposits by all customers
 */
$do_11_39 = function () {
    $map = ['AF', 'BY', 'BA', 'MM', 'BI', 'CF', 'CD', 'EG', 'ER', 'GN', 'GW', 'HT', 'IR', 'IQ', 'KP', 'LB', 'LY', 'ML', 'SO', 'SS', 'SD', 'SY', 'TN', 'UA', 'VE', 'YE', 'ZW'];
    $countries = "('". implode("','", $map) ."')";

    $total = "select count(*) as c from deposits";
    $total = DB::shsSelect('deposits', $total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(*) AS c FROM deposits
        LEFT JOIN users ON users.id = user_id
        WHERE users.country IN $countries
        AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 12.1
 * Total number of customers as at 31/12/2018:
 *
 * Customer is defined as natural persons or legal persons/institutions with whom the institution
 * has a business, professional, or commercial relationship or who are involved
 * as parties in executed contracts.
 *
 */
$do_12_1 = function () {

    $result = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";

    $result = DB::getMasterConnection()->select($result);

    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.3
 * Of the total (per Question 12.1), what percentage of customers are rated "high risk"?
 */
$do_12_3 = function () {

    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(distinct user_id) as c FROM triggers_log 
        WHERE trigger_name='AML23' 
          AND created_at <= date('2018-12-18 23:59:59')
    ";
    $result = DB::shsSelect('triggers_log', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 12.4
 * Of the total (per Question 12.1), what percentage of customers are rated "medium risk"?
 */
$do_12_4 = function () {
    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "
        SELECT count(distinct user_id) FROM triggers_log 
        WHERE trigger_name='AML17' 
          AND created_at <= date('2018-12-18 23:59:59')
    ";
    $result = DB::shsSelect('triggers_log', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 12.5
 * Of the total (per Question 12.1), what percentage of customers are rated "low risk"?
 */
// Solution 100 - (12.3) - (12.4)


/**
 * 12.7
 * What percentage of the institution's customers are inactive?
 */
$do_12_7 = function () {

    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59') AND active = 0 ";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 12.13
 * Please list total number of new customers onboarded during 2018.
 *
 * "Onboarding" refers to the process through which a business relationship is established or an occasional transaction is carried out.
 */
$do_12_13 = function () {
    $result = "SELECT count(*) AS c FROM users WHERE register_date LIKE '2018-%'";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20a
 * Bank transfers (EU, EEA or equivalent safeguards)
 *
 * Note: Number of accounts with one or more deposits from Trustly, EnterCash Citadel – Explorer  as a percentage of 12.1
 */
$do_12_20_a = function () {
    $list = ['trustly', 'entercash', 'citadel'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list
           AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) as res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20b
 * Debit/credit cards issued by banks (EU, EEA or equivalent safeguards)
 *
 * Note: Number of accounts with one or more deposits from Wirecard, Adyen (excluding ebanking if you can differentiate), Worldpay, EMP (Mastercard, VISA) as a percentage of 12.1
 */
$do_12_20_b = function () {
    $list = ['wirecard', 'adyen', 'worldpay', 'emp'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list 
             AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20d
 * EU- or EEA-licensed payment service providers
 * todo: who is Inpay?
 * Note: Number of accounts with one or more deposits from Inpay, Adyen, Euteller, WireCard, PugglePay, EcoPayz, NETELLER, Skrill (Moneybookers), PAYSAFE Card – EUR, Trustly, EnterCash, EMP, Citadel – Explorer, Flexepin, Neosurf, Worldpay as a percentage of 12.1
 */
$do_12_20_d = function () {
    $list = ['adyen', 'euteller', 'wirecard', 'puggle', 'ecopayz', 'neteller', 'skrill', 'paysafe', 'trustly', 'entercash', 'emp', 'citadel', 'flexepin', 'neosurf', 'worldpay'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM  (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list
             AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20e
 * Non-EU or non-EEA-licensed PSP
 * Note: Number of accounts with one or more deposits from SIRU, SMSBill, Payment IQ, InstaDebit, Interact as a percentage of 12.1
 */
$do_12_20_e = function () {
    $list = ['siru', 'smsbill', 'paymentiq', 'instadebit', 'interac'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list
             AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20g
 * Prepaid cards/vouchers
 * Note: Number of accounts with one or more deposits from Paysafecard, Neosurf, Flexepin as a percentage of 12.1
 */
$do_12_20_g = function () {
    $list = ['paysafe', 'neosurf', 'flexepin'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list
             AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 12.20k
 * Online "wallet" facility (account)
 * Note: Number of accounts with one or more deposits from EcoPayz, NETELLER, Skrill (Moneybookers) as a percentage of 12.1
 */
$do_12_20_k = function () {
    $list = ['ecopayz', 'neteller', 'skrill'];
    $list = "('". implode("','", $list) ."')";

    $result = "
        SELECT count(*) AS c FROM (
           SELECT DISTINCT user_id FROM deposits 
           WHERE dep_type IN $list
             AND timestamp BETWEEN '2018-01-01 00:00:00' AND '2018-12-31 23:59:59'
        ) AS res                             
    ";
    $result = DB::shsSelect('deposits', $result);
    $result = array_sum(array_pluck($result,'c'));

    return $result;
};

/**
 * 13.1
 * What percentage of customers are domiciled in Malta?
 */
$do_13_1 = function () {
    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "SELECT count(*) AS c FROM users WHERE country = 'MT' AND register_date <= date('2018-12-18 23:59:59')";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 13.2
 * What percentage of customers are foreign and domiciled in an EU or EEA jurisdiction outside Malta?
 */
$do_13_2 = function () {
    $map = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];
    $countries = "('". implode("','", $map) ."')";

    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "SELECT count(*) AS c FROM users WHERE country != 'MT' AND country IN $countries AND register_date <= date('2018-12-18 23:59:59')";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

/**
 * 13.3
 * What percentage of customers are foreign and domiciled in a non-EU or non-EEA jurisdiction outside Malta?
 */
$do_13_3 = function () {
    $map = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];
    $countries = "('". implode("','", $map) ."')";

    $result = "SELECT count(*) AS c FROM users WHERE country != 'MT' AND country NOT IN $countries AND register_date <= date('2018-12-18 23:59:59')";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    return $result * 100 / $total;
};

/**
 * 13.4
 * What percentage of customers are domiciled in a high risk jurisdiction (as defined by the institution's policies and procedures)?
 */
$do_13_4 = function () {
    $map = ['AF', 'AS', 'BS', 'BW', 'KP', 'ET', 'GH', 'GU', 'IR', 'IQ', 'LY', 'NG', 'PK', 'PA', 'PR', 'WS', 'SA', 'LK', 'SY', 'TT', 'TN', 'VI', 'YE'];
    $countries = "('". implode("','", $map) ."')";

    $total = "SELECT count(*) AS c FROM users WHERE register_date <= date('2018-12-18 23:59:59')";
    $total = DB::getMasterConnection()->select($total);
    $total = array_sum(array_pluck($total,'c'));

    $result = "SELECT count(*) AS c FROM users WHERE country IN $countries AND register_date <= date('2018-12-18 23:59:59')";
    $result = DB::getMasterConnection()->select($result);
    $result = array_sum(array_pluck($result,'c'));

    return $result * 100 / $total;
};

