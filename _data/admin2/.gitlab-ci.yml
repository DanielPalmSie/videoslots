variables:
    SERVER_TEST:
        value: ""
        description: "Target deploy server"
    COMMAND_TEST:
        value: ""
        options:
            - "deploy-test"
            - "release-test"
            - ""
        description: "To deploy a feature-branch for testing, select 'deploy-test'. After testing is done, run this job again with 'release-test'"
    BRAND:
        value: $CI_PROJECT_NAME
        description: "Target deploy brand (project folder name)"
    TARGET_BRANCH:
        value: ""
        description: "Type 'main' to deploy the main branch, otherwise leave empty to deploy the selected branch name"
    DOCKER_PIPELINE:
        value: "false"
        options:
            - "false"
            - "true"
        description: "Select 'true' to create and push a docker image"

stages:
    - deploy_test
    - pipeline_run
    - composer_validate
    - sonar_test_branch
    - notify_slack
    - deploy_preprod
    - test_preprod_url
    - deploy_prod
    - test_prod_url
    - update_story
    - generate_hash
    - docker_version_management
    - docker_build
    - docker_push
    - auto_merge_aws

include:
    - project: "utilities/ci-templates"
      ref: "main"
      file:
          - "deploy-templates/deploy_test.yml"
          - "deploy-templates/pipeline_run.yml"
          - "deploy-templates/deploy_prod.yml"
          - "code-analysis-templates/composer_validate_job.yml"
          - "code-analysis-templates/sonar_test_branch.yml"
          - "automation-templates/test_url.yml"
          - "automation-templates/generate_hash.yml"
          - "automation-templates/update_story.yml"
          - "automation-templates/slack_notification.yml"
          - "docker-pipeline/version-management.yml"
          - "docker-pipeline/docker-config.yml"
          - "docker-pipeline/build.yml"
          - "docker-pipeline/push.yml"
          - "automation-templates/auto_merge_aws.yml"

generate_hash:
    rules:
        - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule" && $DOCKER_PIPELINE == "false"'
          changes:
              - "app/**/*"
              - "config/**/*"

sonar_test_branch:
    variables:
        EXTRA_ARGS: "-Dsonar.exclusions=$SONARQUBE_EXCLUSIONS"

1_deploy_preprod_videoslots:
    extends: .deploy_job_template
    stage: deploy_preprod
    variables:
        SERVERS: $SERVER_PREPROD_VIDEOSLOTS

test_preprod_url:
    extends: .test_url_template
    stage: test_preprod_url
    variables:
        URL: $URL_PREPROD

1_deploy_prod_videoslots:
    extends: .deploy_job_template
    variables:
        SERVERS: $SERVER_PROD_VIDEOSLOTS

2_deploy_prod_mrvegas:
    extends: .deploy_job_template
    variables:
        SERVERS: $SERVER_PROD_MRVEGAS

3_deploy_prod_kungaslottet_se:
    extends: .deploy_job_template
    variables:
        SERVERS: $SERVER_PROD_KUNGASLOTTET_SE

4_deploy_prod_megariches_com:
    extends: .deploy_job_template
    variables:
        SERVERS: $SERVER_PROD_MEGARICHES_COM

5_deploy_prod_dbet:
    extends: .deploy_job_template
    variables:
        SERVERS: $SERVER_PROD_DBET_COM